Ques: Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:

answer[0] is a list of all distinct integers in nums1 which are not present in nums2.
answer[1] is a list of all distinct integers in nums2 which are not present in nums1.
Note that the integers in the lists may be returned in any order.

Code: 

class Solution {
    public List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
        HashSet<Integer> set1 = new HashSet<>();
        HashSet<Integer> set2 = new HashSet<>();
        for(int i=0 ; i<nums1.length ; i++){
            set1.add(nums1[i]);
        }
        for(int i=0 ; i<nums2.length ; i++){
            set2.add(nums2[i]);
        }
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list1 = new ArrayList<>();
        List<Integer> list2 = new ArrayList<>();
        for(Integer s : set1){
            if(!set2.contains(s) == true){
                list1.add(s);
            }
        }
        for(Integer s : set2){
            if(!set1.contains(s) == true){
                list2.add(s);
            }
        }
        ans.add(list1);
        ans.add(list2);
        return ans;
    }
}
