Ques: Given a 0-indexed integer array nums, find a 0-indexed integer array answer where:

answer.length == nums.length.
answer[i] = |leftSum[i] - rightSum[i]|.
Where:

leftSum[i] is the sum of elements to the left of the index i in the array nums. If there is no such element, leftSum[i] = 0.
rightSum[i] is the sum of elements to the right of the index i in the array nums. If there is no such element, rightSum[i] = 0.
Return the array answer.

 
 
 Code:
 class Solution {
    public int[] leftRigthDifference(int[] nums) {
        int[] sum = new int[nums.length];
        if(nums.length==1){
            sum[0] = 0;
            return sum;
        }
        for(int i=0;i<sum.length;i++){
            sum[i] = Math.abs(lsum(i,nums)-rsum(i,nums));
        }
        return sum;
    }
    public static int lsum(int i, int[] nums){
        int lsum=0;
        for(int a=0;a<i;a++){
            lsum = lsum + nums[a];
        }
        return lsum;
    }
    public static int rsum(int i, int[] nums){
        int rsum=0;
        for(int a=i+1;a<nums.length;a++){
            rsum = rsum + nums[a];
        }
        return rsum;
    }
}
