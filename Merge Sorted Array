Ques:  You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.
Merge nums1 and nums2 into a single array sorted in non-decreasing order.
The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.

Code : 

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        for(int i=0;i<nums2.length;i++){
            for(int j=0;j<nums1.length;j++){
                if(nums2[i]<=nums1[j]){
                    for(int k=(m+i-1);k>=j;k--){
                        nums1[k+1] = nums1[k];
                    }
                    nums1[j] = nums2[i];
                    break;
                   
                }
                else{
                    nums1[m+i] = nums2[i];
                   
                }
            }
        }
    }
}

Approach: Shifting nums[1] array after adding the nums[2] elements at the desired index at num[1].
