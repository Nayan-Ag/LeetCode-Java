Ques: You are given a 0-indexed, strictly increasing integer array nums and a positive integer diff. A triplet (i, j, k) is an arithmetic triplet if the following conditions are met:

i < j < k,
nums[j] - nums[i] == diff, and
nums[k] - nums[j] == diff.
Return the number of unique arithmetic triplets.

Code:
class Solution {
    public int arithmeticTriplets(int[] nums, int diff) {
        int count = 0;
        HashSet<Integer> set = new HashSet<>();
        for(int i=0 ; i<nums.length ; i++){
            set.add(nums[i]);
        }
        for(int i=0 ; i<nums.length-2 ; i++){
            if(set.contains(nums[i] + diff) && set.contains(nums[i] + diff + diff)){
                count++;
            }
        }
        return count;
    }
}
