Ques: You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

Code:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if(list1==null && list2==null){
            return null;
        }
        PriorityQueue<Integer> minheap = new PriorityQueue<>();
        ListNode temp1 = list1;
        
        if(list1==null && list2!=null){
            temp1 = list2;
        }
        else if(list2!=null && list1!=null){

            while(temp1.next!=null){
                temp1 = temp1.next;
            }
            temp1.next = list2;
            temp1 = list1;
        }
        ListNode temp = temp1;

        while(temp1!=null){
            minheap.add(temp1.val);
            temp1 = temp1.next;
        }
        temp1 = temp;
        while(temp1!=null){
            temp1.val = minheap.poll();
            temp1 = temp1.next;
        }
        return temp;
    }
}
