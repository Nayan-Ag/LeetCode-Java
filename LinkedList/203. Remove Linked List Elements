Ques: Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.

Code:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        if(head==null){
            return null;
        }
        else if(head.next==null && head.val == val){
            return null;
        }
        else if(head.next==null && head.val!=val){
            return head;
        }
        ListNode prev = head;
        ListNode curr = head.next;
        while(curr!=null){
            if(curr.val == val){
                ListNode temp = curr.next;
                prev.next = temp;
                curr = temp;
            }
            else{
                prev = prev.next;
                curr = curr.next;
            }
        }
        if(head.val == val){
            head = head.next;
        }
        return head;
    }
}
